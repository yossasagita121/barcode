{"version":3,"sources":["pages/Home.js","pages/QRgenerator.js","pages/QRscanner.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Typography","style","margin","variant","Grid","container","spacing","item","xs","to","Button","size","color","padding","path","mdiQrcode","title","mdiQrcodeScan","QRgenerator","useState","qr","setQr","Fab","marginRight","ArrowBack","marginTop","TextField","onChange","event","target","value","width","label","id","includeMargin","TextareaAutosize","fontSize","height","rowsMax","defaultValue","onClick","pngUrl","document","getElementById","toDataURL","replace","downloadLink","createElement","href","download","body","appendChild","click","removeChild","marginLeft","GetApp","QRscanner","qrscan","setQrscan","delay","onError","err","console","error","onScan","data","App","className","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a84e1a9e.chunk.js","sourcesContent":["import {Grid, Button, Typography} from '@material-ui/core';\nimport Icon from '@mdi/react'\nimport { mdiQrcode, mdiQrcodeScan } from '@mdi/js';\nimport { Link } from \"react-router-dom\";\n\nfunction Home() {\n\n    return (\n        <div>\n\n            <Typography style={{margin:30}} variant=\"h2\">\n            React QR Code\n            </Typography>\n\n            <Grid container spacing={6}>\n                <Grid item xs={6}>\n                    <Link to=\"/qr_generator\">\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                        <Icon \n                        style={{padding:10}}\n                        path={mdiQrcode}\n                        title=\"QR Generator\"\n                        size={10}\n                        color=\"white\"\n                        />\n                    </Button>\n                    </Link>\n                </Grid>\n                <Grid item xs={6}>\n                    <Link to=\"/qr_scanner\">\n                    <Button variant=\"contained\" size=\"large\" color=\"primary\">\n                        <Icon \n                        style={{padding:10}}\n                        path={mdiQrcodeScan}\n                        title=\"QR Scanner\"\n                        size={10}\n                        color=\"white\"\n                        />\n                    </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n        \n        </div>\n    );\n  }\n  \n  export default Home;\n  ","import React, {useState} from 'react'\nimport {Fab, TextField, TextareaAutosize, Grid} from '@material-ui/core'\nimport {ArrowBack, GetApp} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QRcode from 'qrcode.react'\n\nfunction QRgenerator() {\n    const [qr, setQr] = useState('lintangwisesa');\n    const handleChange = (event) => {\n        setQr(event.target.value);\n    };\n    const downloadQR = () => {\n        const canvas = document.getElementById(\"myqr\");\n        const pngUrl = canvas\n          .toDataURL(\"image/png\")\n          .replace(\"image/png\", \"image/octet-stream\");\n        let downloadLink = document.createElement(\"a\");\n        downloadLink.href = pngUrl;\n        downloadLink.download = \"myqr.png\";\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n    };\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Generator</span>\n            \n            <div style={{marginTop:30}}>\n                <TextField onChange={handleChange} style={{width:320}}\n                value={qr} label=\"QR content\" size=\"large\" variant=\"outlined\" color=\"primary\" \n                />\n            </div>\n\n            <div>\n                {\n                    qr ?\n                    <QRcode \n                        id=\"myqr\"\n                        value={qr} \n                        size={320}\n                        includeMargin={true}\n                    /> :\n                    <p>No QR code preview</p>\n                }\n            </div>\n            <div>\n                {\n                    qr ? \n                    <Grid container>\n                        <Grid item xs={10}>\n                        <TextareaAutosize\n                            style={{fontSize:18, width:250, height:100}}\n                            rowsMax={4}\n                            defaultValue={qr}\n                            value={qr}\n                        />\n                        </Grid>\n                        <Grid item xs={2}>\n                        <Fab onClick={downloadQR} style={{marginLeft:10}} color=\"primary\">\n                            <GetApp/>\n                        </Fab>\n                        </Grid>\n                    </Grid> :\n                    ''\n                }\n            </div>\n      </div>\n    );\n  }\n  \n  export default QRgenerator;\n  ","import React, {useState} from 'react'\nimport {Fab, TextareaAutosize} from '@material-ui/core'\nimport {ArrowBack} from '@material-ui/icons'\nimport { Link } from \"react-router-dom\";\nimport QrScan from 'react-qr-reader'\n\nfunction QRscanner() {\n\n    const [qrscan, setQrscan] = useState('No result');\n    const handleScan = data => {\n        if (data) {\n            setQrscan(data)\n        }\n    }\n    const handleError = err => {\n    console.error(err)\n    }\n\n    return (\n      <div>\n            <Link to=\"/\">\n            <Fab style={{marginRight:10}} color=\"primary\">\n                <ArrowBack/>\n            </Fab>\n            </Link>\n            <span>QR Scanner</span>\n            \n            <center>\n            <div style={{marginTop:30}}>\n                <QrScan\n                    delay={300}\n                    onError={handleError}\n                    onScan={handleScan}\n                    style={{ height: 240, width: 320 }}\n                />\n            </div>\n            </center>\n\n            <TextareaAutosize\n                style={{fontSize:18, width:320, height:100, marginTop:100}}\n                rowsMax={4}\n                defaultValue={qrscan}\n                value={qrscan}\n            />\n\n      </div>\n    );\n  }\n  \n  export default QRscanner;\n  ","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\n\nimport Home from './pages/Home'\nimport QRgen from './pages/QRgenerator'\nimport QRscan from './pages/QRscanner'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n      \n        <Router>\n          <div>\n\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route path=\"/qr_generator\">\n                <QRgen/>\n              </Route>\n              <Route path=\"/qr_scanner\">\n                <QRscan/>\n              </Route>\n            </Switch>\n\n          </div>\n        </Router>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}